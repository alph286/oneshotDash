import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
var HitPoints = function (_a) {
    var currentHP = _a.currentHP, totalHP = _a.totalHP, temporaryHP = _a.temporaryHP, isEditing = _a.isEditing, onCurrentHPChange = _a.onCurrentHPChange, onTotalHPChange = _a.onTotalHPChange, onTemporaryHPChange = _a.onTemporaryHPChange;
    return (_jsxs("div", { className: "bg-zinc-800 p-3 rounded-lg flex flex-col", children: [_jsx("div", { className: "text-lg font-bold text-amber-500 mb-3", children: "Hit Points" }), isEditing ? (_jsx("div", { className: "flex flex-col space-y-2", children: _jsxs("div", { className: "grid grid-cols-3 gap-2", children: [_jsxs("div", { children: [_jsx("label", { className: "text-sm text-gray-400 block", children: "Current HP" }), _jsx("input", { type: "number", value: currentHP, onChange: function (e) { return onCurrentHPChange(parseInt(e.target.value) || 0); }, className: "w-full bg-zinc-700 text-center rounded px-2 py-1" })] }), _jsxs("div", { children: [_jsx("label", { className: "text-sm text-gray-400 block", children: "Max HP" }), _jsx("input", { type: "number", value: totalHP, onChange: function (e) { return onTotalHPChange(parseInt(e.target.value) || 0); }, className: "w-full bg-zinc-700 text-center rounded px-2 py-1" })] }), _jsxs("div", { children: [_jsx("label", { className: "text-sm text-gray-400 block", children: "Temp HP" }), _jsx("input", { type: "number", value: temporaryHP, onChange: function (e) { return onTemporaryHPChange(parseInt(e.target.value) || 0); }, className: "w-full bg-zinc-700 text-center rounded px-2 py-1" })] })] }) })) : (_jsxs("div", { className: "flex-grow flex flex-col justify-center", children: [_jsxs("div", { className: "grid grid-cols-3 gap-2 text-center", children: [_jsx("div", { className: "text-sm text-gray-400", children: "Current" }), _jsx("div", { className: "text-sm text-gray-400", children: "Max" }), _jsx("div", { className: "text-sm text-gray-400", children: "Temp" })] }), _jsxs("div", { className: "grid grid-cols-3 gap-2 text-center", children: [_jsx("div", { className: "text-2xl font-bold text-amber-500", children: currentHP }), _jsx("div", { className: "text-2xl font-bold text-white", children: totalHP }), _jsx("div", { className: "text-2xl font-bold text-green-500", children: temporaryHP > 0 ? "+".concat(temporaryHP) : temporaryHP })] }), _jsx("div", { className: "mt-2 bg-zinc-700 h-2 rounded-full overflow-hidden", children: _jsx("div", { className: "bg-amber-500 h-full", style: { width: "".concat(Math.min(100, (currentHP / totalHP) * 100), "%") } }) })] }))] }));
};
export default HitPoints;
