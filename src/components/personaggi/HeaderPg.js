import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
function HeaderPg(_a) {
    var character = _a.character, isEditing = _a.isEditing, onInputChange = _a.onInputChange, onKeyPress = _a.onKeyPress;
    return (_jsxs("div", { className: "grid ".concat(isEditing ? 'grid-cols-[150px_minmax(400px,1fr)_150px]' : 'grid-cols-[min-content_min-content_min-content]', " gap-6 mb-6 pb-4 border-b border-gray-700 whitespace-nowrap"), children: [_jsx("div", { className: "text-center ".concat(isEditing ? 'w-full' : 'w-min'), children: isEditing ? (_jsxs("div", { className: "space-y-3", children: [_jsx("label", { className: "block text-sm text-gray-400 mb-1", children: "Level" }), _jsx("input", { type: "number", value: character.level, onChange: function (e) { return onInputChange('level', parseInt(e.target.value)); }, className: "bg-zinc-700 rounded px-2 py-1 w-20" })] })) : (_jsxs(_Fragment, { children: [_jsx("p", { className: "text-gray-400", children: "Level" }), _jsx("p", { className: "text-3xl font-bold text-amber-500", children: character.level })] })) }), _jsx("div", { className: "text-left ".concat(isEditing ? 'w-full' : 'w-min'), children: isEditing ? (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "block text-sm text-gray-400 mb-1", children: "Name" }), _jsx("input", { type: "text", value: character.name, onChange: function (e) { return onInputChange('name', e.target.value); }, onKeyDown: onKeyPress, className: "text-3xl font-bold bg-zinc-700 rounded px-2 py-1 w-full" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "block text-sm text-gray-400 mb-1", children: "Race" }), _jsx("input", { type: "text", value: character.race, onChange: function (e) { return onInputChange('race', e.target.value); }, className: "bg-zinc-700 rounded px-2 py-1 w-full" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "block text-sm text-gray-400 mb-1", children: "Class" }), _jsx("input", { type: "text", value: character.class, onChange: function (e) { return onInputChange('class', e.target.value); }, className: "bg-zinc-700 rounded px-2 py-1 w-full" })] })] })) : (_jsxs(_Fragment, { children: [_jsxs("p", { className: "text-gray-400 truncate", children: [character.race, " - ", character.class] }), _jsx("h1", { className: "text-3xl font-bold text-amber-500 truncate", children: character.name })] })) }), _jsx("div", { className: "text-left ".concat(isEditing ? 'w-full' : 'w-min'), children: isEditing ? (_jsxs("div", { className: "space-y-3", children: [_jsx("label", { className: "block text-sm text-gray-400 mb-1", children: "Proficiency Bonus" }), _jsx("input", { type: "number", value: character.proficiencyBonus, onChange: function (e) { return onInputChange('proficiencyBonus', parseInt(e.target.value)); }, className: "bg-zinc-700 rounded px-2 py-1 w-20" })] })) : (_jsxs(_Fragment, { children: [_jsx("p", { className: "text-gray-400", children: "Proficiency Bonus" }), _jsxs("p", { className: "text-3xl text-amber-500", children: ["+", character.proficiencyBonus] })] })) })] }));
}
export default HeaderPg;
