import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Pencil, Save, Trash2, Download, Book, Wand2 } from 'lucide-react';
function ToolbarPg(_a) {
    var isEditing = _a.isEditing, onEdit = _a.onEdit, onSave = _a.onSave, onExport = _a.onExport, onDelete = _a.onDelete, onToggleNotes = _a.onToggleNotes, onToggleSpells = _a.onToggleSpells, showNotes = _a.showNotes, showSpells = _a.showSpells;
    return (_jsxs("div", { className: "sticky top-0 z-50 bg-zinc-950/80 backdrop-blur-sm p-2 flex justify-between mb-4 gap-2", children: [_jsxs("div", { className: "flex gap-2", children: [_jsx("button", { onClick: onToggleNotes, className: "p-2 rounded-lg transition-colors focus:outline-none ".concat(showNotes ? 'bg-purple-800 hover:bg-purple-700' : 'bg-zinc-800 hover:bg-zinc-700'), children: _jsx(Book, { size: 20, className: "".concat(showNotes ? 'text-purple-300' : 'text-purple-500') }) }), _jsx("button", { onClick: onToggleSpells, className: "p-2 rounded-lg transition-colors focus:outline-none ".concat(showSpells ? 'bg-blue-800 hover:blue-700' : 'bg-zinc-800 hover:bg-zinc-700'), children: _jsx(Wand2, { size: 20, className: "".concat(showSpells ? 'text-blue-200' : 'text-blue-300') }) })] }), _jsxs("div", { className: "flex gap-2", children: [!isEditing && (_jsx("button", { onClick: onEdit, className: "p-2 rounded-lg bg-zinc-800 hover:bg-zinc-700 transition-colors", children: _jsx(Pencil, { size: 20, className: "text-amber-500" }) })), isEditing && (_jsx("button", { onClick: onSave, className: "p-2 rounded-lg bg-zinc-800 hover:bg-zinc-700 transition-colors", children: _jsx(Save, { size: 20, className: "text-green-500" }) })), _jsx("button", { onClick: onExport, className: "p-2 rounded-lg bg-zinc-800 hover:bg-blue-900 transition-colors", disabled: isEditing, children: _jsx(Download, { size: 20, className: "text-blue-500 ".concat(isEditing ? 'opacity-50' : '') }) }), _jsx("button", { onClick: onDelete, className: "p-2 rounded-lg bg-zinc-800 hover:bg-red-900 transition-colors", disabled: isEditing, children: _jsx(Trash2, { size: 20, className: "text-red-500 ".concat(isEditing ? 'opacity-50' : '') }) })] })] }));
}
export default ToolbarPg;
